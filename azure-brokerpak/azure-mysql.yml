# Copyright 2018 the Service Broker Project Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http:#www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
version: 1
name: azure-mysql
id: cac4a46b-c4ec-49df-9b11-06457a29d31e
description: Mysql is a fully managed service for the Azure Platform
display_name: Azure Database for MySQL servers
image_url: https://pbs.twimg.com/profile_images/930941244724854784/noZmA1hr_400x400.jpg
documentation_url: https://docs.microsoft.com/en-us/azure/mysql/
support_url: https://docs.microsoft.com/en-us/azure/mysql/
tags: [azure, mysql, preview]
plans:
- name: Small
  id: 828e324e-6b34-4f50-b224-9b956dd2d1b7
  description: 'Mysql v5.7. Instance properties: 2 vCores, 4 GB RAM, 50 GB storage.'
  display_name: "Small"
  properties:
    pricing_tier: B
    cores: 2
    storage_gb: 50
    mysql_version: 5.7
- name: Medium
  id: 9eb836dd-4B90-4cF7-bc06-1986103802d3
  description: 'Mysql v5.7. Instance properties: 4 vCores, 20 GB RAM, 200 GB storage.'
  display_name: "Medium"
  properties:
    pricing_tier: GP
    cores: 4
    storage_gb: 200    
    mysql_version: 5.7
- name: Large
  id: 6f8Ea44c-6840-4b0b-9068-f0cd9b17437c
  description: 'Mysql v5.7. Instance properties: 8 vCores, 80 GB RAM, 500 GB storage.'
  display_name: "Large"
  properties:
    pricing_tier: MO
    cores: 8
    storage_gb: 500    
    mysql_version: 5.7    
provision:
  plan_inputs:
  - field_name: pricing_tier
    required: true
    type: string
    details: The service tier of the instance.
    enum:
      B: Basic 
      GP: General Purpose
      MO: Memory Optimized
  - field_name: cores
    required: false
    type: integer
    default: 2
    details: Number vcores for the instance (upto the maximum allowed for the service tier)
    constraints:
      maximum: 64
      minimum: 1
      multipleOf: 2
  - field_name: storage_gb
    type: integer
    required: false
    default: 50
    details: Storage allocated to the database instance in GB
    constraints:
      maximum: 16384
      minimum: 5      
  - field_name: mysql_version
    required: true
    type: string
    details: The version for the MySQL instance.
    enum:
      5.6: MySQL v5.6
      5.7: MySQL v5.7
      8.0: MySQL v8.0
  user_inputs:
  - field_name: instance_name
    type: string
    details: Name for your MySQL instance
    default: vsb-mysql-${request.instance_id}
    constraints:
      maxLength: 98
      minLength: 6
      pattern: ^[a-z][a-z0-9-]+$
  - field_name: db_name
    type: string
    details: Name for your database
    default: vsb-db
    constraints:
      maxLength: 64
  - field_name: authorized_network
    type: string
    details: The subnet ID of the Azure VNET to which the instance is locked down to. If left unspecified, the instance is made avaialble on the Internet.
    default: default
  - field_name: region
    type: string
    details: The region of the mysql instance.
    default: westus
    enum:
      eastasia: East Asia
      southeastasia: South East Asia
      centralus: Central US
      eastus: East US
      eastus2: East US 2
      westus: West US
      northcentralus: North Central US
      southcentralus: South Central US
      northeurope: North Europe
      westeurope: West Europe
      japanwest: Japan West
      japaneast: Japan East
      brazilsouth: Brazil South
      australiaeast: Australia East
      australiasoutheast: Australia South East
      australiacentral: Australia Central
      australiacentral2: Australia Central 2
      southindia: South India
      centralindia: Central India
      westindia: West India
      canadacentral: Canada Central
      canadaeast: Canada East
      uksouth: UK South
      ukwest: UK West
      westcentralus: West Central US
      westus2: West US 2
      koreacentral: Korea Central
      koreasouth: Korea South
      francecentral: France Central
      uaenorth: UAE North
      southafricanorth: South Africa North
      southafricawest: South Africa West
      germanycentral: Germany Central
  computed_inputs:
  - name: labels
    default: ${json.marshal(request.default_labels)}
    overwrite: true
    type: object
  template: |-
    variable instance_name { type = string }
    variable db_name { type = string }
    variable mysql_version { type = string }
    variable region { type = string }
    variable labels { type = map }
    variable pricing_tier { type = string }
    variable cores {type = string }
    variable storage_gb {type = string }
    variable authorized_network {type = string}
    resource "azurerm_resource_group" "azure-msyql" {
      name     = var.instance_name
      location = var.region
      tags     = var.labels
    }

    resource "random_string" "username" {
      length = 16
      special = false
      number = false
    }

    resource "random_string" "servername" {
      length = 8
      special = false
    }

    resource "random_password" "password" {
      length = 16
      special = false
    }

    resource "azurerm_mysql_server" "instance" {
      name                = lower(random_string.servername.result)
      location            = azurerm_resource_group.azure-msyql.location
      resource_group_name = azurerm_resource_group.azure-msyql.name
      sku_name = format("%s_Gen5_%d", var.pricing_tier, var.cores)


      storage_profile {
      storage_mb            = var.storage_gb * 1024
      backup_retention_days = 7
      geo_redundant_backup  = "Disabled"
      }

      administrator_login          = random_string.username.result
      administrator_login_password = random_password.password.result
      version                      = var.mysql_version
      ssl_enforcement              = "Disabled"
      tags                         = var.labels
    }

    resource "azurerm_mysql_database" "instance-db" {
        name                = var.db_name

        resource_group_name = azurerm_resource_group.azure-msyql.name
        server_name         = azurerm_mysql_server.instance.name
        charset             = "utf8"
        collation           = "utf8_unicode_ci"
    }

    resource "azurerm_mysql_virtual_network_rule" "allow_subnet_id" {
      name                = format("subnetrule-%s", lower(random_string.servername.result))
      resource_group_name = azurerm_resource_group.azure-msyql.name
      server_name         = azurerm_mysql_server.instance.name
      subnet_id           = var.authorized_network
      count = "${var.authorized_network != "default" ? 1 : 0}"      
    }

    resource "azurerm_mysql_firewall_rule" "allow_azure" {
      name                = format("firewall-%s", lower(random_string.servername.result))
      resource_group_name = azurerm_resource_group.azure-msyql.name
      server_name         = azurerm_mysql_server.instance.name
      start_ip_address    = "0.0.0.0"
      end_ip_address      = "0.0.0.0"
      count = "${var.authorized_network == "default" ? 1 : 0}"       
    }    
  
    output name { value = "${azurerm_mysql_database.instance-db.name}" }
    output hostname { value = "${azurerm_mysql_server.instance.fqdn}" }
    output port { value = 3306 }
    output username { value = "${azurerm_mysql_server.instance.administrator_login}@${azurerm_mysql_server.instance.name}" }
    output password { value = "${azurerm_mysql_server.instance.administrator_login_password}" }
  outputs:
  - field_name: name
    type: string
    details: The name of the database.
  - field_name: hostname
    type: string
    details: Hostname or IP address of the exposed mysql endpoint used by clients to connect to the service.
  - field_name: port
    type: integer
    details: The port number of the exposed mysql instance.
  - field_name: username
    type: string
    details: The username to authenticate to the database instance.
  - field_name: password
    type: string
    details: The password to authenticate to the database instance.
bind:
  plan_inputs: []
  user_inputs: []
  computed_inputs:
    - name: mysql_db_name
      type: string
      default: ${instance.details["name"]}
      overwrite: true
    - name: mysql_hostname
      type: string
      default: ${instance.details["hostname"]}
      overwrite: true
    - name: mysql_port
      type: integer
      default: ${instance.details["port"]}
      overwrite: true
    - name: admin_username
      type: string
      default: ${instance.details["username"]}
      overwrite: true
    - name: admin_password
      type: string
      default: ${instance.details["password"]}
      overwrite: true
  template: |-
    variable mysql_db_name { type = string }
    variable mysql_hostname { type = string }
    variable mysql_port { type = number }
    variable admin_username { type = string }
    variable admin_password { type = string }
    
    provider "mysql" {
      endpoint = format("%s:%d", var.mysql_hostname, var.mysql_port)
      username = var.admin_username
      password = var.admin_password
    }
    
    resource "random_string" "username" {
      length = 16
      special = false
    }
    
    resource "random_password" "password" {
      length = 16
      special = true
      override_special = "_@"
    }    
    
    resource "mysql_user" "newuser" {
      user               = random_string.username.result
      plaintext_password = random_password.password.result
      host = "%"
    }
    
    resource "mysql_grant" "newuser" {
      user       = mysql_user.newuser.user
      database   = var.mysql_db_name
      host = mysql_user.newuser.host
      privileges = ["ALL"]
    }
    
    output username { value = "${random_string.username.result}@${var.mysql_hostname}" }
    output password { value = random_password.password.result }
    output uri { 
      value = format("mysql://%s:%s@%s:%d/%s", 
                      "${random_string.username.result}@${var.mysql_hostname}" , 
                      random_password.password.result, 
                      var.mysql_hostname, 
                      var.mysql_port,
                      var.mysql_db_name) 
    }
    output jdbcUrl { 
      value = format("jdbc:mysql://%s:%s/%s?user=%s\u0026password=%s\u0026verifyServerCertificate=true\u0026useSSL=true\u0026requireSSL=false\u0026serverTimezone=UTC", 
                      var.mysql_hostname, 
                      var.mysql_port,
                      var.mysql_db_name, 
                      "${random_string.username.result}@${var.mysql_hostname}", 
                      random_password.password.result) 
    }  
  outputs: 
    - field_name: username
      type: string
      details: The username to authenticate to the database instance.
    - field_name: password
      type: string
      details: The password to authenticate to the database instance.  
    - field_name: uri
      type: string
      details: The uri to connect to the database instance and database.
    - field_name: jdbcUrl
      type: string
      details: The jdbc url to connect to the database instance and database.    
  examples:
  - name: small configuration
    description: Create a small mysql instance
    plan_id: 828e324e-6b34-4f50-b224-9b956dd2d1b7
    provision_params: {}
    bind_params: {}
    bind_can_fail: true
  - name: small configuration v5.6 50gb storage
    description: Create a small mysql v5.6 instance with 50gb storage
    plan_id: 828e324e-6b34-4f50-b224-9b956dd2d1b7
    provision_params: { "mysql_version": "5.6", "storage_gb": 50 }
    bind_params: {}
    bind_can_fail: true
  - name: medium configuration
    description: Create a medium mysql instance
    plan_id: 9eb836dd-4B90-4cF7-bc06-1986103802d3
    provision_params: {}
    bind_params: {}
    bind_can_fail: true
  - name: large configuration
    description: Create a large mysql instance
    plan_id: 6f8Ea44c-6840-4b0b-9068-f0cd9b17437c
    provision_params: {}
    bind_params: {}
    bind_can_fail: true
